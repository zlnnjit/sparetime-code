server:
  port: 10000
  servlet:
    context-path: /
  tomcat:
    uri-encoding: UTF-8
mybatis:
  config‐location: classpath:mybatis/mybatis-config.xml
spring:
  application:
    name: test-service
    proxy-target-class: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: admin
    url: jdbc:mysql://192.168.1.103:3306/test?useSSL=false&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&serverTimezone=UTC
    initialization-mode: always
    platform: mysql
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    # 初始化大小，最小，最大
    initialSize: 3
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    #建表脚本
    schema:
      - classpath:mybatis/sql/test.sql
  http:
    encoding:
      charset: UTF-8
      enabled: true
  servlet:
    multipart:
      max-file-size: 20480MB
      max-request-size: 20480MB
      enabled: true
  profiles:
    active: dev
    include: db
  jackson:
    default-property-inclusion: non_null


mybatis-plus:
  config-location: classpath:mybatis/mybatis-config.xml
  global-config:
    db-config:
      id-type: auto

